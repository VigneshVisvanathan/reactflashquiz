{"version":3,"sources":["Flashcard.js","FlashcardList.js","App.js","index.js"],"names":["Flashcard","flashcard","useState","flip","setFlip","height","setHeight","frontEl","useRef","backEl","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","useEffect","queostin","answer","options","window","addEventListener","removeEventListener","className","style","onClick","ref","map","option","key","FlashcardList","flashcards","id","App","setflashcards","categories","setCategories","categoryEl","amountEl","decodeString","str","textArea","document","createElement","innerHTML","value","axios","get","then","res","data","trivia_categories","onSubmit","e","preventDefault","params","amount","category","results","queostinItem","index","correct_answer","incorrect_answers","a","Date","now","question","sort","random","htmlFor","name","type","min","step","defaultValue","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1da1460b.chunk.js","sourcesContent":["import React,{useState,useEffect,useRef} from 'react'\r\n\r\nexport default function Flashcard({flashcard}) {\r\n    const [flip,setFlip] = useState(false)\r\n    const [height,setHeight] = useState('initial')\r\n    \r\n    const frontEl= useRef()\r\n    const backEl= useRef()\r\n\r\n    function setMaxHeight() {\r\n        const frontHeight = frontEl.current.getBoundingClientRect().height\r\n        const backHeight = backEl.current.getBoundingClientRect().height\r\n        setHeight(Math.max(frontHeight, backHeight, 100))\r\n      }\r\n\r\n\r\n    useEffect(setMaxHeight,[flashcard.queostin,flashcard.answer,flashcard.options])\r\n    useEffect(() => {\r\n        window.addEventListener('resize', setMaxHeight)\r\n        return () => window.removeEventListener('resize', setMaxHeight)\r\n      }, [])\r\n\r\n    return (\r\n        <div \r\n        className={`card ${flip?'flip':''}`}\r\n        style={{height:height}}       \r\n        onClick={()=>setFlip(!flip)}>\r\n            <div className=\"front\" ref={frontEl}>\r\n                {flashcard.queostin}\r\n                <div className=\"flashcard-options\">\r\n                    {flashcard.options.map(option=>{\r\n                        return <div className=\"flashcard-option\" key={option}>{option}</div>\r\n                    })}\r\n\r\n\r\n                </div>\r\n            </div>\r\n                <div className=\"back\" ref={backEl}>{flashcard.answer}</div>\r\n        </div>\r\n    )\r\n\r\n    \r\n}\r\n","import React from 'react'\r\nimport Flashcard from './Flashcard'\r\n\r\nexport default function FlashcardList({flashcards}) {\r\n    return (\r\n        <div className=\"card-grid\">\r\n            {flashcards.map(flashcard =>{\r\n              return <Flashcard flashcard={flashcard} key={flashcard.id} />  \r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState,useEffect,useRef}from 'react';\nimport axios from 'axios'\nimport './App.css';\nimport FlashcardList from './FlashcardList';\n\n\n\nfunction App() {\n\n\n  const [flashcards,setflashcards]=useState([])\n  const [categories,setCategories]=useState([])\n\n  const categoryEl=useRef()\n  const amountEl=useRef()\n\n  useEffect(()=>{axios\n  .get('https://opentdb.com/api_category.php')\n  .then(res=>{\n    setCategories(res.data.trivia_categories)\n\n  })},[])\n\n  useEffect(()=>{\n    \n  },[])\nfunction decodeString(str){\n  const textArea = document.createElement('textarea')\n  textArea.innerHTML=str\n  return textArea.value\n}\n\nfunction handleSubmit(e){\n  e.preventDefault()\n  axios\n    .get('https://opentdb.com/api.php',{\n      params:{\n        amount:amountEl.current.value,\n        category:categoryEl.current.value\n      }\n    })\n    .then(res=>{\n      setflashcards(res.data.results.map((queostinItem,index)=>{\n        const answer= decodeString(queostinItem.correct_answer)\n        const options=[...queostinItem.incorrect_answers.map(a=>decodeString(a)),answer]\n        return{\n          id:`${index}-${Date.now()}`,\n          queostin:decodeString(queostinItem.question),\n          answer:answer,\n          options:options.sort(()=>Math.random()-.5)\n        }\n      }))\n     \n    })\n}\n\n  return (\n    <>\n    <form className=\"header\" onSubmit={handleSubmit} >\n      <div className=\"form-group\">\n        <label htmlFor=\"category\">Category</label>\n        <select id=\"category\" ref={categoryEl}>\n          {categories.map(category =>{\n            return <option value={category.id} key={category.id}>{category.name}</option>\n          })}\n          \n        </select>\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"amount\">Number of Queostins</label>\n        <input type=\"number\" id=\"amount\" min=\"1\" step=\"1\" defaultValue={10} ref={amountEl}/>\n          </div>\n          <div className=\"form-group\">\n          <button className=\"btn\">Generate</button>\n          </div>\n    </form>\n\n    <div className=\"container\">\n    <FlashcardList   flashcards={flashcards}   />\n    </div>\n    </>\n  );\n}\n\n\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}